{"version":3,"sources":["components/common/FormsControl/FormsControl.js","utils/validators.js","components/Dialogs/DialogItem.js","components/Dialogs/Message.js","components/Dialogs/Dialogs.js","HOC/WithAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["FormControl","meta","touched","error","children","hasError","className","Textarea","props","input","Input","CreateField","placeholder","name","validators","component","type","text","validate","required","value","maxLengthCreator","maxLength","length","DialogItem","id","path","to","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","disabled","Dialogs","dialogsPage","onAddMessage","dialogsData","map","item","messageData","values","newMessageBody","mapStateToProps","state","isAuth","app","initialized","compose","Component","RedirectComponent","this","React","connect","postPage","dispatch","sendMessageActionCreator"],"mappings":"6PAMaA,EAAc,SAAC,GAA4C,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAASC,EAAe,EAAfA,SAEhDC,EAAWH,GAAWC,EAE5B,OACE,sBAAKG,UAAS,uBAAkBD,GAAY,SAA5C,UACE,8BACGD,IAGH,8BAEIC,GACA,+BACGF,UAQAI,EAAW,SAACC,GAEvB,OAAO,cAACR,EAAD,2BAAiBQ,GAAjB,aACL,oDAAcA,EAAMC,OAAWD,QAItBE,EAAQ,SAACF,GAEpB,OAAO,cAACR,EAAD,2BAAiBQ,GAAjB,aACL,iDAAWA,EAAMC,OAAWD,QAInBG,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAqC,IAA1BC,EAAyB,uDAAlB,GAAIC,EAAc,uDAAP,GACtF,OACE,gCACE,cAAC,IAAD,CACEJ,KAAMA,EACNE,UAAWA,EACXH,YAAaA,EACbM,SAAUJ,EACVE,KAAMA,IAEPC,O,uDCpDP,oEAAO,IAAME,EAAW,SAACC,GACvB,IAAIA,EAEJ,MAAO,sBAGIC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC9C,IAAS,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOG,QAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mICMlBE,EAVI,SAAC,GAAgB,IAAfX,EAAc,EAAdA,KAAMY,EAAQ,EAARA,GACnBC,EAAI,mBAAeD,GAEvB,OACI,qBAAKnB,UAAU,OAAf,SACI,cAAC,IAAD,CAASqB,GAAID,EAAb,SAAoBb,KADGY,ICIpBG,EATC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEd,OACI,qBAAKvB,UAAU,OAAf,SACKuB,K,kBCIPP,G,OAAYD,YAAiB,KAiE7BS,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAlBL,SAACvB,GACpB,OACI,uBAAMyB,SAAUzB,EAAM0B,aAAtB,UACI,cAACC,EAAA,EAAD,CACItB,KAAK,iBACLE,UAAWR,IACXW,SAAU,CAACC,IAAUG,GACrBV,YAAY,uBAEhB,wBACIwB,UAAU,EADd,4BAWGC,EAjEC,SAAC,GAGV,IAFHC,EAEE,EAFFA,YACAC,EACE,EADFA,aAOA,OACI,sBAAKjC,UAAU,UAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,eAAf,SAEQgC,EAAYE,aACZF,EAAYE,YAAYC,KAAI,SAAAC,GAAI,OAC5B,cAAC,EAAD,CAEI7B,KAAM6B,EAAK7B,KACXY,GAAIiB,EAAKjB,IAFJiB,EAAKjB,SAO1B,qBAAKnB,UAAU,gBAAf,SAEQgC,EAAYK,aACZL,EAAYK,YAAYF,KAAI,SAAAC,GAAI,OAC5B,cAAC,EAAD,CAEIb,QAASa,EAAKb,SADTa,EAAKjB,YAO9B,qBAAKnB,UAAU,cAAf,SACI,qBAAKA,UAAU,aAAf,SACI,cAACwB,EAAD,CAAqBG,SAjCf,SAACW,GACnBL,EAAaK,EAAOC,2B,sDCdxBC,EAAkB,SAACC,GAAD,MAAY,CAEhCC,OAAQD,EAAME,IAAIC,cCkBLC,uBDfiB,SAACC,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAK9C,MAAMwC,OAET,cAACI,EAAD,eAAeE,KAAK9C,QAFI,cAAC,IAAD,CAAUmB,GAAI,eAHJ,GACb4B,IAAMH,WAStC,OAF2BI,YAAQV,EAARU,CAAyBH,KCSpDG,aAhBsB,SAACT,GACvB,MAAO,CACLT,YAAaS,EAAMU,aAII,SAACC,GAC1B,MAAO,CACLnB,aAAc,SAACM,GACba,EAASC,YAAyBd,SAKzBM,CAGbd","file":"static/js/5.34d554cd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Field } from 'redux-form';\r\n\r\nimport './FormsControl.css';\r\n\r\nexport const FormControl = ({ meta: { touched, error }, children }) => {\r\n\r\n  const hasError = touched && error\r\n\r\n  return (\r\n    <div className={`form-control ${hasError && 'error'}`} >\r\n      <div>\r\n        {children}\r\n      </div>\r\n\r\n      <div>\r\n        {\r\n          hasError &&\r\n          <span>\r\n            {error}\r\n          </span>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n\r\n  return <FormControl {...props}>\r\n    <textarea {...props.input} {...props} />\r\n  </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n\r\n  return <FormControl {...props}>\r\n    <input {...props.input} {...props} />\r\n  </FormControl>\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, type = \"\", text = '') => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        name={name}\r\n        component={component}\r\n        placeholder={placeholder}\r\n        validate={validators}\r\n        type={type}\r\n      />\r\n      {text}\r\n    </div>\r\n  )\r\n}","export const required = (value) => {\r\n  if (value) return undefined\r\n\r\n  return 'Field is requered '\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value?.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\r\n  return undefined\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = ({name, id}) => {\r\n    let path = `/dialogs/${id}`\r\n\r\n    return (\r\n        <div className=\"item\" key={id}>\r\n            <NavLink to={path}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\n\r\nconst Message = ({message}) => {\r\n\r\n    return (\r\n        <div className=\"item\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport DialogItem from './DialogItem';\r\nimport Message from './Message';\r\nimport { Textarea } from '../common/FormsControl/FormsControl';\r\nimport { required, maxLengthCreator } from '../../utils/validators';\r\n\r\nimport './Dialogs.css';\r\n\r\nconst maxLength = maxLengthCreator(50)\r\n\r\nconst Dialogs = ({\r\n    dialogsPage,\r\n    onAddMessage,\r\n}) => {\r\n\r\n    const addNewMessage = (values) => {\r\n        onAddMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs-row\">\r\n                <div className=\"dialog-items\">\r\n                    {\r\n                        dialogsPage.dialogsData &&\r\n                        dialogsPage.dialogsData.map(item => (\r\n                            <DialogItem\r\n                                key={item.id}\r\n                                name={item.name}\r\n                                id={item.id}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"message-items\">\r\n                    {\r\n                        dialogsPage.messageData &&\r\n                        dialogsPage.messageData.map(item => (\r\n                            <Message\r\n                                key={item.id}\r\n                                message={item.message}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"dialogs-row\">\r\n                <div className=\"dialog-add\">\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                name=\"newMessageBody\"\r\n                component={Textarea}\r\n                validate={[required, maxLength]}\r\n                placeholder=\"Enter your message\"\r\n            />\r\n            <button\r\n                disabled={false}\r\n            >\r\n                Add post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => ({\r\n  // isAuth: state.auth.isAuth\r\n  isAuth: state.app.initialized\r\n})\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n  let AuthRedirectCoponent = connect(mapStateToProps)(RedirectComponent);\r\n\r\n  return AuthRedirectCoponent\r\n}\r\n\r\n","// import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux';\r\n\r\nimport Dialogs from './Dialogs';\r\n\r\nimport { sendMessageActionCreator } from '../../redux/dialogs-reducer'\r\nimport { WithAuthRedirect } from '../../HOC/WithAuthRedirect';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.postPage,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddMessage: (newMessageBody) => {\r\n      dispatch(sendMessageActionCreator(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  WithAuthRedirect,\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs);"],"sourceRoot":""}